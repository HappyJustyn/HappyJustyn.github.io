<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://happyjustyn.github.io</id>
    <title>Gridea</title>
    <updated>2022-10-17T14:02:13.433Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://happyjustyn.github.io"/>
    <link rel="self" href="https://happyjustyn.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://happyjustyn.github.io/images/avatar.png</logo>
    <icon>https://happyjustyn.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[debian11 安装 oracle jdk 8]]></title>
        <id>https://happyjustyn.github.io/post/debian11-an-zhuang-oracle-jdk-8/</id>
        <link href="https://happyjustyn.github.io/post/debian11-an-zhuang-oracle-jdk-8/">
        </link>
        <updated>2022-08-17T14:09:35.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-下载-jdk-压缩包-并上传到-debian-解压">1. <a href="https://www.oracle.com/java/technologies/downloads/archive/">下载</a> jdk 压缩包, 并上传到 debian, 解压</h2>
<p><code>tar zxvf jdk-8u202-linux-x64.tar.gz -C /root/my-tools/java</code></p>
<p>使用<code>mv</code>命令重命名目录</p>
<p>这里我的 jdk 目录是: <code>/root/my-tools/java/jdk1.8</code></p>
<h2 id="2-给-java-命令添加一组替换项">2. 给 java 命令添加一组替换项</h2>
<p><code>update-alternatives --install /usr/bin/java java /root/my-tools/java/jdk1.8/bin/java 1</code></p>
<h2 id="3-将替换项设置为默认项">3. 将替换项设置为默认项</h2>
<p><code>update-alternatives --set java /root/my-tools/java/jdk1.8/bin/java</code></p>
<h2 id="4-查看-java-版本">4. 查看 java 版本</h2>
<p><code>java -version</code></p>
<h2 id="设置环境变量">设置环境变量</h2>
<ol>
<li>打开 shell 配置文件<br>
<code>vim ~/.profile</code></li>
<li>添加如下语句<br>
<code>export JAVA_HOME=/root/my-tools/java/jdk1.8</code></li>
<li>重新加载配置文件<br>
<code>source ~/.profile</code></li>
</ol>
<h2 id="补充命令">补充命令</h2>
<ul>
<li>显示所有替换项 <code>update-alternatives --list java</code></li>
<li>删除一组替换项 <code>update-alternatives --remove java /root/my-tools/java/jdk1.8</code></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[debian11 设置 nacos 开机启动]]></title>
        <id>https://happyjustyn.github.io/post/debian11-she-zhi-nacos-kai-ji-qi-dong/</id>
        <link href="https://happyjustyn.github.io/post/debian11-she-zhi-nacos-kai-ji-qi-dong/">
        </link>
        <updated>2022-08-17T14:06:03.000Z</updated>
        <content type="html"><![CDATA[<p>系统需要安装 jdk, 我的 jdk 目录是 <code>/root/my-tools/java/jdk1.8</code></p>
<h2 id="1-下载-nacos-压缩包-上传到-debian-解压">1. 下载 nacos 压缩包, 上传到 debian, 解压</h2>
<p>我的 nacos 目录是: <code>/root/my-tools/nacos</code></p>
<h2 id="2-创建-nacos-系统服务文件">2. 创建 nacos 系统服务文件</h2>
<p><code>vim /etc/systemd/system/nacos.service</code></p>
<p>添加如下内容:</p>
<pre><code>[Unit]
Description=nacos
After=network.target
 
[Service]
Environment=&quot;JAVA_HOME=/root/my-tools/java/jdk1.8&quot;
Type=forking
ExecStart=/root/my-tools/nacos/bin/startup.sh -m standalone
ExecReload=/root/my-tools/nacos/bin/shutdown.sh
ExecStop=/root/my-tools/nacos/bin/shutdown.sh
PrivateTmp=true
 
[Install]  
WantedBy=multi-user.target
</code></pre>
<h2 id="3-授予脚本文件执行权限">3. 授予脚本文件执行权限</h2>
<p><code>chmod -R 775 /root/my-tools/nacos</code></p>
<h2 id="4-使用-systemctl-命令管理服务">4. 使用 systemctl 命令管理服务</h2>
<p><code>systemctl daemon-reload</code><br>
<code>systemctl enable nacos.service</code><br>
<code>systemctl start nacos.service</code></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[debian11 安装 minio]]></title>
        <id>https://happyjustyn.github.io/post/debian-11-an-zhuang-minio/</id>
        <link href="https://happyjustyn.github.io/post/debian-11-an-zhuang-minio/">
        </link>
        <updated>2022-08-06T05:04:05.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-下载-minio-服务端致执行程序-并授予可执行权限">1. 下载 minio 服务端致执行程序, 并授予可执行权限</h2>
<pre><code>wget https://dl.min.io/server/minio/release/linux-amd64/minio -O /usr/local/bin/minio
</code></pre>
<p>如果 linux 中下载缓慢, 可以直接打开上面的链接, 下载下来, 上传到 linux 中.</p>
<pre><code>chmod +x /usr/local/bin/minio
</code></pre>
<h2 id="2-设置开机启动">2. 设置开机启动</h2>
<h3 id="a-下载-minioservice-文件">a. 下载 minio.service 文件</h3>
<pre><code>wget https://raw.githubusercontent.com/minio/minio-service/master/linux-systemd/minio.service -O /etc/systemd/system/minio.service
</code></pre>
<p>如果下载不了, 直接打开上面的链接, 复制内容, <code>vim /etc/systemd/system/minio.service</code>, 把内容粘贴即可.</p>
<h3 id="b-修改-minioservice-文件">b. 修改 minio.service 文件</h3>
<p>注释掉规定的用户和组, 如下:</p>
<pre><code># User=minio-user
# Group=minio-user
</code></pre>
<h3 id="c-添加-minio-环境变量文件">c. 添加 minio 环境变量文件</h3>
<p><code>vim /etc/default/minio</code></p>
<pre><code># 指定数据存储目录(注意这个目录要存在)
MINIO_VOLUMES=&quot;/root/minio-dir&quot;

# 指定监听端口(api 端口: 9000, 控制台端口: 9001)
MINIO_OPTS=&quot;--address :9000  --console-address :9001&quot;

# Root user for the server.
MINIO_ROOT_USER=admin

# Root secret for the server.
MINIO_ROOT_PASSWORD=12345678
</code></pre>
<h3 id="d-防火墙开启-9000-和-9001-端口">d. 防火墙开启 9000 和 9001 端口</h3>
<pre><code>ufw allow 9000/tcp
ufw allow 9001/tcp
</code></pre>
<p>现在可以使用 <code>systemctl</code> 命令管理 minio 服务了</p>
<h2 id="3-访问控制台">3. 访问控制台</h2>
<p>地址: <code>hostip:9001</code><br>
访问 <code>host:9000</code> 也会重定向到上面的地址</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于 SM4 加密算法在 Java 项目中使用的一些总结]]></title>
        <id>https://happyjustyn.github.io/post/guan-yu-sm4-jia-mi-suan-fa-zai-java-xiang-mu-zhong-shi-yong-de-yi-xie-zong-jie/</id>
        <link href="https://happyjustyn.github.io/post/guan-yu-sm4-jia-mi-suan-fa-zai-java-xiang-mu-zhong-shi-yong-de-yi-xie-zong-jie/">
        </link>
        <updated>2022-07-27T13:55:13.000Z</updated>
        <content type="html"><![CDATA[<h2 id="sm4-基本介绍">SM4 基本介绍</h2>
<p>SM4 是一种分组加密算法, 分组大小(块大小)为 128 位(bit), 即 16 字节(Byte), 密码长度也为 128 位, 类似的算法还有常用的 AES 加密算法, 两者的加密原理类似.</p>
<h2 id="常用加密模式">常用加密模式</h2>
<p>分组加密算法有多种加密模式, 比较常用的是 CBC 模式, 具体了解可以参考这篇博文: <a href="https://www.cnblogs.com/11sgXL/p/13607083.html"><em>分组加密算法的几种工作模式</em></a>, 该模式中的初始向量 <strong>IV</strong> 的长度, 通常与分组大小一致.</p>
<h2 id="java-中的填充模式-pkcs5padding">Java 中的填充模式 PKCS5Padding</h2>
<p>分组加密通常需要对明文数据进行字节填充, 以使得明文长度为分组大小的整倍数. 常用的填充模式为 <code>PKCS7Padding</code> , 但是 Java 中没有 PKCS7Padding . 实际上 Java 中的 <strong>PKCS5Padding</strong> 指的就是 <strong>PKCS7Padding</strong> , 这可能是一个 Java 的历史遗留问题, 需要注意下.</p>
<p>两者的区别如下:</p>
<blockquote>
<p>The difference between the PKCS#5 and PKCS#7 padding mechanisms is the block size; PKCS#5 padding is defined for 8-byte block sizes, PKCS#7 padding would work for any block size from 1 to 255 bytes. So fundamentally PKCS#5 padding is a subset of PKCS#7 padding for 8 byte block sizes.</p>
</blockquote>
<h2 id="计算加密后的文件大小">计算加密后的文件大小</h2>
<p>公式如下:</p>
<pre><code>cipherLen = (clearLen/16 + 1) * 16;
</code></pre>
<p>Please note that if the clear-text is multiple of block size, a whole new block is needed for padding. Say you clear-text is 16 bytes. The cipher-text will take 32 bytes.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://happyjustyn.github.io/post/hello-gridea/</id>
        <link href="https://happyjustyn.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="https://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>